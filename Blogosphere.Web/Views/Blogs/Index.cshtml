@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model Blogosphere.Web.Models.DTOs.BlogDetailsViewModel

@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if(Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>

                </div>
                <div class="mb-3">
                    @if (signInManager.IsSignedIn(User))
                    {
                        @if (Model.Liked)
                        {
                            <a  style="cursor:pointer">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }else{
                        <a id="btnLike" style="cursor:pointer">
                        <i class="bi bi-hand-thumbs-up"></i>
                        </a>
                        }
                    }
                        <span id="totalLikes">@Model.TotalLikes</span> Likes
                    </div>
                <div class="d-flex mb-3">
                    @foreach (var Tag in Model.Tags)
                    {
                        <span class="badge bg-secondary me-1">@Tag.Name</span>
                    }
                </div>
                <img src="@Model.FeaturedImageUrl" alt="" class="d-block img-fluid mb-3"/>
                <div class="mb-3 blog-details-content">@Html.Raw(Model.Content)</div>
                <div class="card">
                    <div class="card-header"><h5>Comments</h5>
                        @* Section To Add A Comment *@
                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comments Description</label>
                                    <input type="text" asp-for="CommentDescription" class="form-control" />
                                </div>
                                <div class="mb-3">
                                    <button class="btn  btn-dark"><i class="bi bi-send-fill"></i></button>
                                    <input type="hidden" asp-for="Id"/>
                                    <input type="hidden" asp-for="UrlHandle"/>
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @* Show All the Comments from dataBase *@
                        @if (Model.Comments != null && Model.Comments.Any())
                        {
                            @foreach(var Comment in Model.Comments)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                       
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secondary">@Comment.UserName</span>
                                            <span class="text-secondary">@Comment.DateAdded.ToShortDateString()</span>
                                        </div>
                                        <div>
                                            @Comment.Description
                                        </div>
                                    </div>
                                </div>
                            }
                            

                        }
                    </div>
                    </div>
               
            }
            else
            {
                <p>Blog Post Not Found!!!</p>
            }

        </div>
    </div>
</div>
@section Scripts{
    <script>
        const btnLikeElement = document.getElementById('btnLike');
        const totalLikeElement = document.getElementById('totalLikes');

        async function getTotalLikes() {
            fetch('api/BlogPostLike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',

                    'Accept': '*/*'
                }
            }).then(data => data.json()).then(result => totalLikeElement.innerHTML = result);
        }





        async function addLikeForBlog(){
            fetch('/api/BlogPostLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({ blogPostId: '@Model.Id', 
                userId: '@userManager.GetUserId(User)' 
                })
            }).then(() => {
                btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLikeElement.removeEventListener('click', addLikeForBlog);
                getTotalLikes();
            });
        }
        btnLikeElement.addEventListener('click', addLikeForBlog);
    </script>
}